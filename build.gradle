import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:2.4.1'
    }
}

task unzipSingleVM(type: Copy) {
	from tarTree(resources.gzip(file('osgiRuntimes/singleVM/felix-framework-5.0.1.tar.gz')))
	into file("osgiRuntimes/singleVM")
}

allprojects {
	apply plugin: 'eclipse'
	apply plugin: 'maven'

	repositories {
		flatDir {
			dirs '../libs'
		}
		mavenLocal()
	   	mavenCentral()
	}	
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'osgi'
	apply plugin: 'sonar-runner'
	apply plugin: 'com.bmuschko.docker-remote-api'
	
	eclipse.project {
		natures 'org.springsource.ide.eclipse.gradle.core.nature'
	}
	
	eclipse.classpath.file {
		beforeMerged { classpath ->
			def gradleSupportContainer = new org.gradle.plugins.ide.eclipse.model.Container('org.springsource.ide.eclipse.gradle.classpathcontainer')
			gradleSupportContainer.exported = true
			classpath.entries << gradleSupportContainer
		}
	}

	jar {
                manifest {
			instruction 'Export-Package', '!*.internal.*, com.bobpaulin.*'
               }
        }
	docker {
		url = 'http://localhost:2375'
	}
	task copyBundleDocker(type: Copy) {
		from 'build/libs'
		into "build/$project.name/files/felix-framework-5.0.1/bundle"
	}
	task copyBundle(type: Copy) {
		from 'build/libs'
		into "../osgiRuntimes/singleVM/felix-framework-5.0.1/bundle"
	}
	task copyRuntime(type: Copy) {
		from tarTree(resources.gzip(file("../osgiRuntimes/$project.name/felix-framework-5.0.1.tar.gz")))
		into project.file("build/$project.name/files")
	}

	task copyTestFiles(type: Copy) {
		from "../testfiles"
		into project.file("build/$project.name/files")
	}

	copyRuntime.enabled = file("../osgiRuntimes/$project.name").exists()
	copyBundleDocker.dependsOn build, copyRuntime
}
